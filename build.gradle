plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id "com.jfrog.bintray" version "1.8.4"
    id "com.diffplug.gradle.spotless" version "3.25.0"
    id 'io.codearte.nexus-staging' version '0.21.1'
    id "de.marcphilipp.nexus-publish" version "0.4.0"
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id "de.undercouch.download" version "4.0.0"
}

description 'Web3j-unit extension'

ext {
    web3jVersion = version
    kotlinLoggingVersion = '1.6.24'
    logbackVersion = '1.2.3'
    mockitoKotlinVersion = '1.6.0'
    testContainersVersion = '1.12.4'
}

apply {
    [
        'bintray',
        'jacoco',
        'java',
        'javadoc',
        'repositories',
        'publish',
        'spotless',
        'junit'
    ].each { buildScript ->
        download {
            src "https://raw.githubusercontent.com/web3j/build-tools/master/gradle/$buildScript/build.gradle"
            dest "$rootDir/gradle/$buildScript/build.gradle"
            overwrite true
            quiet true
            onlyIfModified true
        }
        from("$rootDir/gradle/$buildScript/build.gradle")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
            "org.web3j:core:$web3jVersion",
            "org.web3j:web3j-evm:$web3jVersion",
            "org.testcontainers:testcontainers:$testContainersVersion",
            "io.github.microutils:kotlin-logging:$kotlinLoggingVersion",
            "ch.qos.logback:logback-classic:$logbackVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceCompatibility = 1.8
